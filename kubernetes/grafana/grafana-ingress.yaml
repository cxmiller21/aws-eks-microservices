apiVersion: v1
kind: Service
metadata:
  namespace: monitoring
  name: grafana-service
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /api/health
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: monitoring
  name: ingress-grafana
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing # LB to be internet-facing pods
    alb.ingress.kubernetes.io/target-type: ip # Registers Pods as targets for the ALB
    # alb.ingress.kubernetes.io/ip-address-type: dualstack # use this if IPv6 is enabled
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: grafana-service
              port:
                number: 3000
---
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: monitoring
#   name: prometheus-service
#   annotations:
#     alb.ingress.kubernetes.io/healthcheck-path: /-/healthy
# spec:
#   ports:
#     - port: 9090
#       targetPort: 9090
#       protocol: TCP
#   type: NodePort
#   selector:
#     app.kubernetes.io/name: prometheus
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: monitoring
#   name: ingress-prometheus
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/ip-address-type: dualstack
# spec:
#   ingressClassName: alb
#   rules:
#     - http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: prometheus-service
#               port:
#                 number: 9090
